// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	github "github.com/spring-financial-group/peacock/pkg/git/github"
	mock "github.com/stretchr/testify/mock"
)

// SCMClientFactory is an autogenerated mock type for the SCMClientFactory type
type SCMClientFactory struct {
	mock.Mock
}

// GetClient provides a mock function with given fields: owner, repo, user, prNumber
func (_m *SCMClientFactory) GetClient(owner string, repo string, user string, prNumber int) *github.Client {
	ret := _m.Called(owner, repo, user, prNumber)

	var r0 *github.Client
	if rf, ok := ret.Get(0).(func(string, string, string, int) *github.Client); ok {
		r0 = rf(owner, repo, user, prNumber)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*github.Client)
		}
	}

	return r0
}

// RemoveClient provides a mock function with given fields: client
func (_m *SCMClientFactory) RemoveClient(client *github.Client) {
	_m.Called(client)
}

type mockConstructorTestingTNewSCMClientFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewSCMClientFactory creates a new instance of SCMClientFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSCMClientFactory(t mockConstructorTestingTNewSCMClientFactory) *SCMClientFactory {
	mock := &SCMClientFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
