// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MessageClient is an autogenerated mock type for the MessageClient type
type MessageClient struct {
	mock.Mock
}

// Send provides a mock function with given fields: content, subject, addresses
func (_m *MessageClient) Send(content string, subject string, addresses []string) error {
	ret := _m.Called(content, subject, addresses)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, []string) error); ok {
		r0 = rf(content, subject, addresses)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMessageClient creates a new instance of MessageClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMessageClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MessageClient {
	mock := &MessageClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
